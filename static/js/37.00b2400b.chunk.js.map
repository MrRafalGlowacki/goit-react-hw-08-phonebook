{"version":3,"file":"static/js/37.00b2400b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AddForm/AddForm.module.css?c4c6","webpack://react-homework-template/./src/components/AddForm/AddName/AddName.module.css?f150","components/AddForm/AddName/AddName.jsx","webpack://react-homework-template/./src/components/AddForm/AddPhone/AddPhone.module.css?89ea","components/AddForm/AddPhone/AddPhone.jsx","components/AddForm/AddForm.jsx","components/Calendar/Calendar.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactsList/ContactsListItem/ContactsListItem.module.css?89f9","components/ContactsList/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddForm_container__d8WiA\",\"title\":\"AddForm_title__m0PVc\",\"form\":\"AddForm_form__giF8Q\",\"button\":\"AddForm_button__9-j4i\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"AddName_name__j0b-5\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contacts/contactsSlice';\nimport { selectName } from 'redux/selectors';\nimport css from './AddName.module.css';\n\nexport const AddName = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(selectName);\n\n  const handleChange = event => {\n    const payload = { name: event.target.name, value: event.target.value };\n    dispatch(inputHandlerAction(payload));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"name\" className={css.name}>\n        Name\n      </label>\n      <input\n        onChange={handleChange}\n        autoComplete=\"off\"\n        placeholder=\"Enter Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        // pattern=\"^[a-zA-Zа-źА-Ź]+(([' -][a-zA-Zа-źА-Ź ])?[a-zA-Zа-źА-Ź]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"number\":\"AddPhone_number__Cb8xe\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contacts/contactsSlice';\nimport { selectNumber } from 'redux/selectors';\nimport css from './AddPhone.module.css';\n\nexport const AddPhone = () => {\n  const dispatch = useDispatch();\n  const number = useSelector(selectNumber);\n\n  const handleChange = event => {\n    const payload = { name: event.target.name, value: event.target.value };\n    dispatch(inputHandlerAction(payload));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"number\" className={css.number}>\n        Number\n      </label>\n      <input\n        onChange={handleChange}\n        autoComplete=\"off\"\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contacts/contactsSlice';\nimport { addContactAction } from 'redux/contacts/contactOperations';\nimport { selectContacts, selectName, selectNumber } from 'redux/selectors';\nimport css from './AddForm.module.css';\nimport { AddName } from './AddName/AddName';\nimport { AddPhone } from './AddPhone/AddPhone';\nimport { Button, IconButton } from '@mui/material';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\n\nexport const AddForm = () => {\n  const name = useSelector(selectName);\n  const number = useSelector(selectNumber);\n  const contactsList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const found = contactsList.find(contact => contact.name === name);\n    if (found) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(\n        addContactAction({\n          name: name,\n          number: number,\n        })\n      );\n      dispatch(inputHandlerAction({ name: 'name', value: '' }));\n      dispatch(inputHandlerAction({ name: 'number', value: '' }));\n    }\n  };\n\n  return (\n    <div className={css.container} >\n      <h2 className={css.title}>Add new contact</h2>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <AddName />\n        <AddPhone />\n        <Button\n          className={css.button}\n          sx={{ textTransform: 'none' }}\n          variant=\"contained\"\n          type=\"submit\"\n          startIcon={<PersonAddAlt1Icon />}\n        >\n          Add contact\n        </Button>\n        <IconButton color=\"primary\" aria-label=\"add contact\"></IconButton>\n      </form>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport { Paper } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport default function BasicDateCalendar() {\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('850'));\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      {isDesktop && (\n        <Paper\n          elevation={2}\n          sx={{\n            marginLeft: '10px',\n            maxWidth: '320px',\n          }}\n        >\n          <DateCalendar />\n        </Paper>\n      )}\n    </LocalizationProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsList_container__r+Txe\",\"empty\":\"ContactsList_empty__HYxRP\",\"rainbow\":\"ContactsList_rainbow__Dz4yy\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsListItem_item__VnwkN\",\"button\":\"ContactsListItem_button__gfbnW\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactsListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport {\n  setOpenedContactAction,\n  showHideModalAction,\n} from 'redux/modal/modalSlice';\n\nexport const ContactsListItem = ({\n  contact,\n  id,\n  name,\n  number,\n  onContactRemove,\n}) => {\n  const dispatch = useDispatch();\n  const handleContactsEdit = contact => {\n    dispatch(showHideModalAction());\n    dispatch(setOpenedContactAction(contact));\n  };\n  return (\n    <li key={id} className={css.item}>\n      <div onClick={() => handleContactsEdit(contact)}>\n        <span className={css.name}>\n          {name}: {number}\n        </span>{' '}\n      </div>\n      <button\n        type=\"button\"\n        className={css.button}\n        onClick={() => onContactRemove(id, name)}\n      >\n        X\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onContactRemove: PropTypes.func,\n};\n","import React from 'react';\nimport css from './ContactsList.module.css';\nimport { ContactsListItem } from './ContactsListItem/ContactsListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContactAction } from 'redux/contacts/contactOperations';\n\nexport const ContactsList = () => {\n  const contactsList = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = (id, name) => {\n    dispatch(deleteContactAction(id));\n    alert(`${name} will be removed from your contacts`);\n  };\n  const getFilteredList = () => {\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const sortedList = getFilteredList().sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  const list = sortedList.map(contact => (\n    <ContactsListItem\n      key={contact.id}\n      contact={contact}\n      id={contact.id}\n      name={contact.name}\n      number={contact.number}\n      onContactRemove={handleRemoveContact}\n      filter={filter}\n    />\n  ));\n  return (\n    <>\n      {contactsList.length > 0 || (\n        <div className={css.empty}>add some contacts</div>\n      )}\n      {contactsList.length > 0 && <ul className={css.container}>{list}</ul>}\n    </>\n  );\n};\n","import { Container } from '@mui/material';\nimport { AddForm } from 'components/AddForm/AddForm';\nimport Calendar from 'components/Calendar/Calendar';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/Loader';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsAction } from 'redux/contacts/contactOperations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContactsAction());\n  }, [dispatch]);\n  return (\n    <Container\n      sx={{\n        display: { xs: 'block', sm: 'grid' },\n        gridTemplateColumns: '1fr 1fr 1fr',\n        marginTop: '20px',\n      }}\n    >\n      <AddForm />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n      <Calendar />\n    </Container>\n  );\n};\nexport default Contacts;\n"],"names":["AddName","dispatch","useDispatch","name","useSelector","selectName","htmlFor","className","css","onChange","event","payload","target","value","inputHandlerAction","autoComplete","placeholder","type","title","required","AddPhone","number","selectNumber","pattern","AddForm","contactsList","selectContacts","onSubmit","preventDefault","find","contact","alert","addContactAction","Button","sx","textTransform","variant","startIcon","PersonAddAlt1","IconButton","color","BasicDateCalendar","theme","useTheme","isDesktop","useMediaQuery","breakpoints","up","LocalizationProvider","dateAdapter","AdapterDayjs","Paper","elevation","marginLeft","maxWidth","DateCalendar","ContactsListItem","id","onContactRemove","onClick","showHideModalAction","setOpenedContactAction","handleContactsEdit","ContactsList","filter","selectFilter","handleRemoveContact","deleteContactAction","list","toLowerCase","includes","sort","a","b","localeCompare","map","length","isLoading","selectIsLoading","error","selectError","useEffect","fetchContactsAction","Container","display","xs","sm","gridTemplateColumns","marginTop","Loader"],"sourceRoot":""}