{"version":3,"file":"static/js/890.0330702d.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/AddForm/AddForm.module.css?c4c6","webpack://react-homework-template/./src/components/AddForm/AddName/AddName.module.css?f150","components/AddForm/AddName/AddName.jsx","webpack://react-homework-template/./src/components/AddForm/AddPhone/AddPhone.module.css?89ea","components/AddForm/AddPhone/AddPhone.jsx","components/AddForm/AddForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactsList/ContactFilter/ContactFilter.module.css?be52","components/ContactsList/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsListItem/ContactsListItem.module.css?89f9","components/ContactsList/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter.filter;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectName = state => state.contacts.inputs.name;\nexport const selectNumber = state => state.contacts.inputs.number;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AddForm_title__m0PVc\",\"form\":\"AddForm_form__giF8Q\",\"button\":\"AddForm_button__9-j4i\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"AddName_name__j0b-5\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contactsSlice';\nimport { selectName } from 'redux/selectors';\nimport css from './AddName.module.css';\n\nexport const AddName = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(selectName);\n\n  const handleChange = event => {\n    const payload = { name: event.target.name, value: event.target.value };\n    dispatch(inputHandlerAction(payload));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"name\" className={css.name}>\n        Name\n      </label>\n      <input\n        onChange={handleChange}\n        autoComplete=\"off\"\n        placeholder=\"Enter Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-źА-Ź]+(([' -][a-zA-Zа-źА-Ź ])?[a-zA-Zа-źА-Ź]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"number\":\"AddPhone_number__Cb8xe\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contactsSlice';\nimport { selectNumber } from 'redux/selectors';\nimport css from './AddPhone.module.css';\n\nexport const AddPhone = () => {\n  const dispatch = useDispatch();\n  const number = useSelector(selectNumber);\n\n  const handleChange = event => {\n    const payload = { name: event.target.name, value: event.target.value };\n    dispatch(inputHandlerAction(payload));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"number\" className={css.number}>\n        Number\n      </label>\n      <input\n        onChange={handleChange}\n        autoComplete=\"off\"\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contactsSlice';\nimport { addContactAction } from 'redux/operations';\nimport { selectContacts, selectName, selectNumber } from 'redux/selectors';\nimport css from './AddForm.module.css';\nimport { AddName } from './AddName/AddName';\nimport { AddPhone } from './AddPhone/AddPhone';\n\nexport const AddForm = () => {\n  const name = useSelector(selectName);\n  const number = useSelector(selectNumber);\n  const contactsList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const found = contactsList.find(contact => contact.name === name);\n    if (found) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(\n        addContactAction({\n          name: name,\n          number: number,\n        })\n      );\n      dispatch(inputHandlerAction({ name: 'name', value: '' }));\n      dispatch(inputHandlerAction({ name: 'number', value: '' }));\n    }\n  };\n\n  return (\n    <>\n      <h2 className={css.title}>Phonebook</h2>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <AddName />\n        <AddPhone />\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsList_title__Nc-fb\",\"container\":\"ContactsList_container__r+Txe\",\"empty\":\"ContactsList_empty__HYxRP\",\"rainbow\":\"ContactsList_rainbow__Dz4yy\"};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"ContactFilter_filter__TrOUz\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterAction } from 'redux/filtersSlice';\nimport { selectFilter } from 'redux/selectors';\nimport css from './ContactFilter.module.css';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    const value = event.target.value;\n    dispatch(setFilterAction(value));\n  };\n\n  return (\n    <>\n      <p className={css.filter}>Find contacts by name</p>\n      <input\n        className={css.filter}\n        onChange={handleChange}\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"search...\"\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"ContactsListItem_name__jhG1M\",\"item\":\"ContactsListItem_item__VnwkN\",\"button\":\"ContactsListItem_button__gfbnW\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactsListItem.module.css';\n\nexport const ContactsListItem = ({ id, name, number, onContactRemove }) => {\n  return (\n    <li key={id} className={css.item}>\n      <span className={css.name}>\n        {name}: {number}\n      </span>{' '}\n      <button\n        type=\"button\"\n        className={css.button}\n        onClick={() => onContactRemove(id, name)}\n      >\n        X\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onContactRemove: PropTypes.func,\n};\n","import React from 'react';\nimport css from './ContactsList.module.css';\nimport { ContactFilter } from './ContactFilter/ContactFilter';\nimport { ContactsListItem } from './ContactsListItem/ContactsListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContactAction } from 'redux/operations';\n\nexport const ContactsList = () => {\n  const contactsList = useSelector(selectContacts);\n  const contactsAmount = contactsList.length;\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleRemoveContact = (id, name) => {\n    dispatch(deleteContactAction(id));\n    alert(`${name} will be removed from your contacts`);\n  };\n  const getFilteredList = () => {\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const sortedList = getFilteredList().sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  const list = sortedList.map(contact => (\n    <ContactsListItem\n      key={contact.id}\n      id={contact.id}\n      name={contact.name}\n      number={contact.number}\n      onContactRemove={handleRemoveContact}\n      filter={filter}\n    />\n  ));\n  return (\n    <>\n      <h3 className={css.title}>\n        {contactsAmount === 0\n          ? 'You have no contacts'\n          : contactsAmount === 1\n          ? 'You have only one contact'\n          : `You have ${contactsAmount} contacts`}\n      </h3>\n      {contactsList.length > 0 || (\n        <div className={css.empty}>add some contacts</div>\n      )}\n      {contactsList.length > 0 && <ContactFilter />}\n      {contactsList.length > 0 && <ul className={css.container}>{list}</ul>}\n    </>\n  );\n};\n","const { ColorRing } = require('react-loader-spinner');\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","import { AddForm } from 'components/AddForm/AddForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/Loader';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsAction } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    useEffect(() => {\n      dispatch(fetchContactsAction());\n    }, [dispatch]);\n  return (\n    <>\n      <AddForm />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["selectFilter","state","filter","selectContacts","contacts","selectIsLoading","isLoading","selectError","error","selectName","inputs","name","selectNumber","number","AddName","dispatch","useDispatch","useSelector","htmlFor","className","css","onChange","event","payload","target","value","inputHandlerAction","autoComplete","placeholder","type","pattern","title","required","AddPhone","AddForm","contactsList","onSubmit","preventDefault","find","contact","alert","addContactAction","ContactFilter","setFilterAction","ContactsListItem","id","onContactRemove","onClick","ContactsList","contactsAmount","length","handleRemoveContact","deleteContactAction","list","toLowerCase","includes","sort","a","b","localeCompare","map","ColorRing","require","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useEffect","fetchContactsAction"],"sourceRoot":""}