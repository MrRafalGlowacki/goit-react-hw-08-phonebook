{"version":3,"file":"static/js/519.9796b13f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AddForm/AddForm.module.css?c4c6","webpack://react-homework-template/./src/components/AddForm/AddName/AddName.module.css?f150","components/AddForm/AddName/AddName.jsx","webpack://react-homework-template/./src/components/AddForm/AddPhone/AddPhone.module.css?89ea","components/AddForm/AddPhone/AddPhone.jsx","components/AddForm/AddForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactsList/ContactFilter/ContactFilter.module.css?be52","components/ContactsList/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsListItem/ContactsListItem.module.css?89f9","components/ContactsList/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AddForm_title__m0PVc\",\"form\":\"AddForm_form__giF8Q\",\"button\":\"AddForm_button__9-j4i\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"AddName_name__j0b-5\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contacts/contactsSlice';\nimport { selectName } from 'redux/selectors';\nimport css from './AddName.module.css';\n\nexport const AddName = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(selectName);\n\n  const handleChange = event => {\n    const payload = { name: event.target.name, value: event.target.value };\n    dispatch(inputHandlerAction(payload));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"name\" className={css.name}>\n        Name\n      </label>\n      <input\n        onChange={handleChange}\n        autoComplete=\"off\"\n        placeholder=\"Enter Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        // pattern=\"^[a-zA-Zа-źА-Ź]+(([' -][a-zA-Zа-źА-Ź ])?[a-zA-Zа-źА-Ź]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"number\":\"AddPhone_number__Cb8xe\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contacts/contactsSlice';\nimport { selectNumber } from 'redux/selectors';\nimport css from './AddPhone.module.css';\n\nexport const AddPhone = () => {\n  const dispatch = useDispatch();\n  const number = useSelector(selectNumber);\n\n  const handleChange = event => {\n    const payload = { name: event.target.name, value: event.target.value };\n    dispatch(inputHandlerAction(payload));\n  };\n\n  return (\n    <>\n      <label htmlFor=\"number\" className={css.number}>\n        Number\n      </label>\n      <input\n        onChange={handleChange}\n        autoComplete=\"off\"\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { inputHandlerAction } from 'redux/contacts/contactsSlice';\nimport { addContactAction } from 'redux/contacts/contactOperations';\nimport { selectContacts, selectName, selectNumber } from 'redux/selectors';\nimport css from './AddForm.module.css';\nimport { AddName } from './AddName/AddName';\nimport { AddPhone } from './AddPhone/AddPhone';\n\nexport const AddForm = () => {\n  const name = useSelector(selectName);\n  const number = useSelector(selectNumber);\n  const contactsList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const found = contactsList.find(contact => contact.name === name);\n    if (found) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(\n        addContactAction({\n          name: name,\n          number: number,\n        })\n      );\n      dispatch(inputHandlerAction({ name: 'name', value: '' }));\n      dispatch(inputHandlerAction({ name: 'number', value: '' }));\n    }\n  };\n\n  return (\n    <>\n      <h2 className={css.title}>Phonebook</h2>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <AddName />\n        <AddPhone />\n        <button type=\"submit\" className={css.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsList_title__Nc-fb\",\"container\":\"ContactsList_container__r+Txe\",\"empty\":\"ContactsList_empty__HYxRP\",\"rainbow\":\"ContactsList_rainbow__Dz4yy\"};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"ContactFilter_filter__TrOUz\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterAction } from 'redux/filtersSlice';\nimport { selectFilter } from 'redux/selectors';\nimport css from './ContactFilter.module.css';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = event => {\n    const value = event.target.value;\n    dispatch(setFilterAction(value));\n  };\n\n  return (\n    <>\n      <p className={css.filter}>Find contacts by name</p>\n      <input\n        className={css.filter}\n        onChange={handleChange}\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"search...\"\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"ContactsListItem_name__jhG1M\",\"item\":\"ContactsListItem_item__VnwkN\",\"button\":\"ContactsListItem_button__gfbnW\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactsListItem.module.css';\n\nexport const ContactsListItem = ({ id, name, number, onContactRemove }) => {\n  return (\n    <li key={id} className={css.item}>\n      <span className={css.name}>\n        {name}: {number}\n      </span>{' '}\n      <button\n        type=\"button\"\n        className={css.button}\n        onClick={() => onContactRemove(id, name)}\n      >\n        X\n      </button>\n    </li>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onContactRemove: PropTypes.func,\n};\n","import React from 'react';\nimport css from './ContactsList.module.css';\nimport { ContactFilter } from './ContactFilter/ContactFilter';\nimport { ContactsListItem } from './ContactsListItem/ContactsListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContactAction } from 'redux/contacts/contactOperations';\n\nexport const ContactsList = () => {\n  const contactsList = useSelector(selectContacts);\n  const contactsAmount = contactsList.length;\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleRemoveContact = (id, name) => {\n    dispatch(deleteContactAction(id));\n    alert(`${name} will be removed from your contacts`);\n  };\n  const getFilteredList = () => {\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const sortedList = getFilteredList().sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  const list = sortedList.map(contact => (\n    <ContactsListItem\n      key={contact.id}\n      id={contact.id}\n      name={contact.name}\n      number={contact.number}\n      onContactRemove={handleRemoveContact}\n      filter={filter}\n    />\n  ));\n  return (\n    <>\n      <h3 className={css.title}>\n        {contactsAmount === 0\n          ? 'You have no contacts'\n          : contactsAmount === 1\n          ? 'You have only one contact'\n          : `You have ${contactsAmount} contacts`}\n      </h3>\n      {contactsList.length > 0 || (\n        <div className={css.empty}>add some contacts</div>\n      )}\n      {contactsList.length > 0 && <ContactFilter />}\n      {contactsList.length > 0 && <ul className={css.container}>{list}</ul>}\n    </>\n  );\n};\n","import { AddForm } from 'components/AddForm/AddForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/Loader';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsAction } from 'redux/contacts/contactOperations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContactsAction());\n  }, [dispatch]);\n  return (\n    <>\n      <AddForm />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["AddName","dispatch","useDispatch","name","useSelector","selectName","htmlFor","className","css","onChange","event","payload","target","value","inputHandlerAction","autoComplete","placeholder","type","title","required","AddPhone","number","selectNumber","pattern","AddForm","contactsList","selectContacts","onSubmit","preventDefault","find","contact","alert","addContactAction","ContactFilter","filter","selectFilter","setFilterAction","ContactsListItem","id","onContactRemove","onClick","ContactsList","contactsAmount","length","handleRemoveContact","deleteContactAction","list","toLowerCase","includes","sort","a","b","localeCompare","map","isLoading","selectIsLoading","error","selectError","useEffect","fetchContactsAction","Loader"],"sourceRoot":""}